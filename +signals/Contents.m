% Main page
%
% @mainpage M-Signals - Механизм "Signals and Slots" для MATLAB
%
% Введение
% --------
% M-Signals - это реализация шаблона проектирования "Наблюдатель",
% спроектированная в виде механизма, известного как
% <a href="http://en.wikipedia.org/wiki/Signals_and_slots">Signals and Slots</a>.
% 
% Данный подход основывается на том, что существуют классы сигналов и
% слотов (приёмников). Может быть создано неограниченное количество 
% экземпляров этих классов. К одному сигналу может быть подключено неограниченное
% количество приёмников, а также каждый приёмник может принимать несколько
% сигналов (может быть подключен к нескольким сигналам).
% При испускании, сигналы могут передавать какие-либо данные (аргументы),
% ассоциированные с этими сигналами.
%
% Такой механизм является очень гибким при разработке объектно-ориентированных 
% программ. Он позволяет связывать различные объекты, которые ничего не 
% знают друг о друге.
%
% Реализация шаблона "Наблюдатель" с использованием механизма сигналов и
% слотов позволяет минимизировать количество повторяющегося кода, уменьшить
% модульную связанность. "Сигналы и слоты" хорошо подходят для реализации
% логики программ с графическим интерфейсом пользователя (GUI), а также при
% проектировании программ со слабосвязанной модульной архитектурой.
%
%
% Основные возможности и особенности M-Signals
% --------------------------------------------
%   - Сигналы могут быть анонимные или иметь конкретного отправителя
%   - Аргументы сигнала могут быть типизированные и нетипизированные
%   - Сигналы в классе отправителя могут быть автоматически созданы из событий
%   - Сигнал может испускаться через генерацию события, либо напрямую
%   - Гибкая обработка исключений, возникающих в слотах с выводом подробной
%     информации об исключении
%   - API классов подобное используемому в библиотеке Qt, которое
%     нагляднее и удобнее чем API механизма событий MATLAB
%   - Сигналы, имеющие отправителя, могут быть заблокированы на уровне
%     отправителя
%   - Каждый сигнал может быть включен и отключен индивидуально
%   - Каждый приёмник может быть включен и отключен индивидуально
%
%
% Signal
% ------
%   Класс Signal реализует функциональность сигнала. В реализации M-Signals
%   cигналы могут быть анонимными или иметь отправителя. Отправителем
%   сигнала могут являться только классы, наследуемые от класса Sender.
%   
%   Сигнал может испускаться без аргументов, с любым количеством любых 
%   аргументов, либо с обязательными аргументами явно указанного типа.
%   Контроль типов испускаемых аргументов может быть полезен в некоторых
%   случаях.
%   
%   Сигнал может испускаться, используя механизм событий MATLAB
%   (генерировать событие), либо может испускаться, минуя механизм событий,
%   напрямую вызывая Callback-функции слотов.
%
%
% Receiver
% --------
%   Класс Receiver реализует функциональность слота (приёмника).
%   Один приёмник может принимать несколько сигналов. Если
%   Callback-функция приёмника принимает меньшее количество аргументов, чем
%   испускает сигнал, то лишние аргументы будут проигнорированы.
%
%   Данная сущность добавлена в M-Signals для удобства и контроля, а также,
%   потому что в MATLAB указатели на функции не являются объектами, и
%   работа с ними не вписывается в парадигму объектно-ориентированного
%   программирования.
%
%
% Sender
% ------
%   Класс Sender реализует функциональность отправителя сигналов. Класс
%   реализует некоторые методы и определённое поведение. Любой класс,
%   который наследуется от класса Sender может являться отправителем
%   сигналов.
%
%   Класс Sender добавляет следующие возможности к ссылочным классам MATLAB:
%   - Динамическое добавление и удаление сигналов. Сигналы добавляются 
%     как динамические поля (Dynamic properties).
%   - Создание сигналов из событий. События класса могут быть отображены в
%     сигналы и добавлены в объект отправителя.
%   - Контроль сигналов. Сигналы могут быть заблокированы и разблокированы
%     на уровне отправителя.
%
%
% ErrorHandler
% ------------
%   Класс для обработки исключений, происходящих в приёмниках при генерации
%   сигналов. Определяет метод process, который вызывается всякий раз при 
%   возникновении исключения. Классы Signal и Receiver могут использовать
%   экземпляры ErrorHandler независимо.
%   Для обработки исключений необходимо создавать пользовательские классы,
%   наследуемые от ErrorHandler и задавать их экземпляры в сигналах или
%   приёмниках.
%
%
% @authors Evgeny Prilepin <esp.home@gmail.com>
%
% @copyright 2011-2013 Evgeny Prilepin
%
